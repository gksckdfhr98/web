<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kdis.demo.dao.LoginDao">

	<!-- 회원가입 -->
	<insert id="userJoin" parameterType="Map">
		INSERT INTO USER (userId,userNm,password,birthday,phoneNumber,email,regDt,grade,userState,salt,loginFailCount)
		VALUES(#{userId},#{userNm},#{password},#{birthday},#{phoneNumber},#{email},NOW(),#{grade},#{userState},#{salt},#{loginFailCount})
	</insert>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" parameterType="String" resultType="Integer">
		select count(*)
		from USER
		where userId = #{userId}
	</select>
	
	<!-- 회원 로그인 체크 -->
	<!-- 1) 회원상태 1 
		 2) 회원상태 8 이면서 로그인 5회 실패 이후 30분 지났을 때-->
	<select id="loginSubmit" parameterType="Map" resultType="Integer">
	<![CDATA[
		select count(*)
		from USER
		where userId = #{userId} and password = #{password}  
		and ((userState = '1') || (userState = '8' && 
				((select loginFailTime from user where userId = #{userId}) < (select DATE_SUB(NOW(), INTERVAL 30 MINUTE) FROM DUAL))))
	]]>
	</select>
	
	<!-- 관리자 로그인 체크 -->
	<!-- 1) 회원등급 관리자 5
		 2) 회원상태 가입 1
		 3) 회원상태 잠김 8 이면서 로그인 5회 실패 이후 30분 지났을 때-->
	<select id="adminLoginSubmit" parameterType="Map" resultType="Integer">
	<![CDATA[
		select count(*)
		from USER
		where userId = #{userId} and password = #{password}  
		and grade = '5' and ((userState = '1') || (userState = '8' && 
				((select loginFailTime from user where userId = #{userId}) < (select DATE_SUB(NOW(), INTERVAL 30 MINUTE) FROM DUAL))))
	]]>
	</select>
	
	
	<!-- 회원 기존 salt 가져오기 -->
	<select id="getUserSalt" resultType="String">
		select salt
		from USER	
		where userId = #{userId}
	</select>

	<!-- 회원 아이디 찾기 -->
	<select id="searchIdChk" resultType="String">
		select userId
		from USER
		where userNm = #{userNm} and phoneNumber = #{phoneNumber} and userState = '1'
	</select>
	
	<!-- 회원 비밀번호 찾기를 위한 회원정보 체크 -->
	<select id="searchPwdChk" resultType="String">
		select userId
		from USER
		where userNm = #{userNm} and phoneNumber = #{phoneNumber} and email = #{email} and userState = '1'
	</select>
	
	<!-- 로그인실패카운트 처리 -->
	<update id="updateLoginFailCount" parameterType="Map">
		update USER
		set loginFailCount = #{loginFailCount}
		where userId = #{userId}
	</update>
	
	<!-- 로그인 이력 삽입-->
	<insert id="insertLoginHistory" parameterType="Map">
		update USER
		set loginFailTime = NOW()
		where userId = #{userId}
	</insert>

</mapper>